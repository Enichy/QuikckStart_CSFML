<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_first__window_8c" xml:lang="en-US">
<title>/home/enichy/Documents/Doxygene/CSFML_DOC/Documentation/basic_part/first_example/first_window.c File Reference</title>
<indexterm><primary>/home/enichy/Documents/Doxygene/CSFML_DOC/Documentation/basic_part/first_example/first_window.c</primary></indexterm>
<para>

<para>This is the first example of a basic window creation using CSFML library. </para>
 
</para>
<programlisting>#include &lt;SFML/Graphics.h&gt;
#include &lt;SFML/Window.h&gt;
#include &lt;SFML/System.h&gt;
#include &lt;SFML/Audio.h&gt;
#include &lt;SFML/Network.h&gt;
#include &lt;SFML/Config.h&gt;
#include &lt;SFML/OpenGL.h&gt;
</programlisting><simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_first__window_8c_1aae3e0fb361a9e5abfb4c1ea3fb515a7f">create_window</link> (void)</para>

<para>Creates a basic window using CSFML library. </para>
</listitem>
            <listitem><para><anchor xml:id="_first__window_8c_1a840291bc02cba5474a4cb46a9b9566fe"/>int <emphasis role="strong">main</emphasis> (void)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>This is the first example of a basic window creation using CSFML library. </para>

<para><literallayout><computeroutput>int&#32;main(void)
{
&#32;&#32;&#32;&#32;//&#32;Call&#32;the&#32;create_window&#32;function&#32;and&#32;return&#32;84&#32;if&#32;it&#32;fails
&#32;&#32;&#32;&#32;if&#32;(create_window()&#32;==&#32;84)
&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;(84);
&#32;&#32;&#32;return&#32;(0);
}
</computeroutput></literallayout> This file contains the main function which is the entry point of the program. It calls the create_window function and returns 84 if it fails. Then it returns 0. </para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_first__window_8c_1aae3e0fb361a9e5abfb4c1ea3fb515a7f"/>    <section>
    <title>create_window()</title>
<indexterm><primary>create_window</primary><secondary>first_window.c</secondary></indexterm>
<indexterm><primary>first_window.c</primary><secondary>create_window</secondary></indexterm>
<para><computeroutput>int create_window (void )</computeroutput></para><para>

<para>Creates a basic window using CSFML library. </para>
</para>

<para>This function creates a window with the specified dimensions and title using the CSFML library. The window remains open until it is closed by the user. <literallayout><computeroutput>void&#32;create_window(void)
{
&#32;&#32;&#32;&#32;&#32;//&#32;Create&#32;a&#32;sfVideoMode&#32;object&#32;with&#32;the&#32;desired&#32;dimensions&#32;and&#32;color&#32;depth
&#32;&#32;&#32;&#32;&#32;sfVideoMode&#32;mode&#32;=&#32;{800,&#32;600,&#32;32};

&#32;&#32;&#32;&#32;&#32;//&#32;Create&#32;a&#32;sfRenderWindow&#32;object
&#32;&#32;&#32;&#32;&#32;sfRenderWindow&#32;*window&#32;=&#32;NULL;

&#32;&#32;&#32;&#32;&#32;//&#32;Create&#32;a&#32;sfEvent&#32;object
&#32;&#32;&#32;&#32;&#32;sfEvent&#32;event;

&#32;&#32;&#32;&#32;&#32;//&#32;Create&#32;the&#32;window
&#32;&#32;&#32;&#32;&#32;window&#32;=&#32;sfRenderWindow_create(mode,&#32;&quot;My&#32;window&quot;,&#32;sfResize&#32;|&#32;sfClose,&#32;NULL);

&#32;&#32;&#32;&#32;&#32;//&#32;If&#32;the&#32;window&#32;creation&#32;failed,&#32;return&#32;84
&#32;&#32;&#32;&#32;&#32;if&#32;(!window)
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;(84);

&#32;&#32;&#32;&#32;&#32;//&#32;Principal&#32;loop&#32;that&#32;keeps&#32;the&#32;window&#32;open
&#32;&#32;&#32;&#32;&#32;while&#32;(sfRenderWindow_isOpen(window)){
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;Secondary&#32;loop&#32;that&#32;poll&#32;the&#32;events
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;while&#32;(sfRenderWindow_pollEvent(window,&#32;&amp;event)){

&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;If&#32;the&#32;user&#32;closes&#32;the&#32;window,&#32;close&#32;the&#32;window
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(event.type&#32;==&#32;sfEvtClosed)
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sfRenderWindow_close(window);
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}

&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;Clear&#32;the&#32;window&#32;with&#32;a&#32;black&#32;color
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sfRenderWindow_clear(window,&#32;sfBlack);

&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;Display&#32;the&#32;window
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sfRenderWindow_display(window);
&#32;&#32;&#32;&#32;&#32;}

&#32;&#32;&#32;&#32;&#32;//&#32;Destroy&#32;the&#32;window
&#32;&#32;&#32;&#32;&#32;sfRenderWindow_destroy(window);
&#32;&#32;&#32;&#32;&#32;return&#32;(0);
&#32;}
</computeroutput></literallayout> 
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>None</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>An int, that determine if the programm has been executed correctly. </para>
</formalpara>
</para>
</section>
</section>
</section>
