.TH "/home/enichy/Documents/Doxygene/CSFML_DOC/Documentation/basic_part/first_example/first_window.c" 3 "Mon Feb 5 2024" "Version 1.0" "QuickStart CSFML by Enichy" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/enichy/Documents/Doxygene/CSFML_DOC/Documentation/basic_part/first_example/first_window.c \- This is the first example of a basic window creation using CSFML library\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <SFML/Graphics\&.h>\fP
.br
\fC#include <SFML/Window\&.h>\fP
.br
\fC#include <SFML/System\&.h>\fP
.br
\fC#include <SFML/Audio\&.h>\fP
.br
\fC#include <SFML/Network\&.h>\fP
.br
\fC#include <SFML/Config\&.h>\fP
.br
\fC#include <SFML/OpenGL\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBcreate_window\fP (void)"
.br
.RI "Creates a basic window using CSFML library\&. "
.ti -1c
.RI "int \fBmain\fP (void)"
.br
.in -1c
.SH "Detailed Description"
.PP 
This is the first example of a basic window creation using CSFML library\&. 


.PP
.nf
int main(void)
{
    // Call the create_window function and return 84 if it fails
    if (create_window() == 84)
       return (84);
   return (0);
}

.fi
.PP
 This file contains the main function which is the entry point of the program\&. It calls the create_window function and returns 84 if it fails\&. Then it returns 0\&. 
.SH "Function Documentation"
.PP 
.SS "int create_window (void)"

.PP
Creates a basic window using CSFML library\&. This function creates a window with the specified dimensions and title using the CSFML library\&. The window remains open until it is closed by the user\&. 
.PP
.nf
void create_window(void)
{
     // Create a sfVideoMode object with the desired dimensions and color depth
     sfVideoMode mode = {800, 600, 32};

     // Create a sfRenderWindow object
     sfRenderWindow *window = NULL;

     // Create a sfEvent object
     sfEvent event;

     // Create the window
     window = sfRenderWindow_create(mode, "My window", sfResize | sfClose, NULL);

     // If the window creation failed, return 84
     if (!window)
         return (84);

     // Principal loop that keeps the window open
     while (sfRenderWindow_isOpen(window)){
         // Secondary loop that poll the events
         while (sfRenderWindow_pollEvent(window, &event)){

             // If the user closes the window, close the window
             if (event\&.type == sfEvtClosed)
                 sfRenderWindow_close(window);
         }

         // Clear the window with a black color
         sfRenderWindow_clear(window, sfBlack);

         // Display the window
         sfRenderWindow_display(window);
     }

     // Destroy the window
     sfRenderWindow_destroy(window);
     return (0);
 }

.fi
.PP
 
.PP
\fBParameters\fP
.RS 4
\fINone\fP 
.RE
.PP
\fBReturns\fP
.RS 4
An int, that determine if the programm has been executed correctly\&. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for QuickStart CSFML by Enichy from the source code\&.
